
> swig@1.4.2 test /Users/jakub/Developer/Blame/externals/swig
> make lint && make test reporter=spec && make test-browser && make coverage cov-reporter=travis-cov

0 errors


  version
    â—¦ is 1.4.2: [2K[0G    âœ“ is 1.4.2 

  options
    open/close controls
      â—¦ can have new lines inside: [2K[0G      âœ“ can have new lines inside 
      â—¦ can be set at compile time: [2K[0G      âœ“ can be set at compile time 
      â—¦ can be set at render time: [2K[0G      âœ“ can be set at render time 
      â—¦ can be set as default: [2K[0G      âœ“ can be set as default 
      â—¦ must be an array with 2 strings: [2K[0G      âœ“ must be an array with 2 strings 
      â—¦ must be different: [2K[0G      âœ“ must be different 
      â—¦ must be at least 2 characters: [2K[0G      âœ“ must be at least 2 characters 
    locals
      â—¦ can be set as defaults: [2K[0G      âœ“ can be set as defaults 
      â—¦ use local-context first for output: [2K[0G      âœ“ use local-context first for output 
    cache
      â—¦ can be falsy: [2K[0G      âœ“ can be falsy 
      â—¦ can be "memory" and is by default: [2K[0G      âœ“ can be "memory" and is by default 
      â—¦ can accept custom "get" and "set" methods: [2K[0G      âœ“ can accept custom "get" and "set" methods 
      â—¦ throws on anything else: [2K[0G      âœ“ throws on anything else 
      â—¦ gh-423: compile method respects local cache setting: [2K[0G      âœ“ gh-423: compile method respects local cache setting 
    null object
      â—¦ can skip null object: [2K[0G      âœ“ can skip null object 

  separate instances
    â—¦ can be created and don't interfere: [2K[0G    âœ“ can be created and don't interfere 
    â—¦ properly autoescapes: [2K[0G    âœ“ properly autoescapes 

  swig.compileFile
    â—¦ can run syncronously: [2K[0G    âœ“ can run syncronously 
    â—¦ can run asynchronously: [2K[0G    âœ“ can run asynchronously 
    â—¦ can use callback with errors: [2K[0G    âœ“ can use callback with errors 

  swig.renderFile
    â—¦ can use callback with errors occurred at the time of rendering: [2K[0G    âœ“ can use callback with errors occurred at the time of rendering 
    â—¦ can run syncronously: [2K[0G    âœ“ can run syncronously 
    â—¦ can run asynchronously: [2K[0G    âœ“ can run asynchronously 
    â—¦ can use callbacks with errors: [2K[0G    âœ“ can use callbacks with errors 

  swig.run
    â—¦ runs compiled templates: [2K[0G    âœ“ runs compiled templates 
    â—¦ does not cache if no filename given: [2K[0G    âœ“ does not cache if no filename given 
    â—¦ caches if given a filename: [2K[0G    âœ“ caches if given a filename 

  bin/swig -v
    â—¦ shows the version number: [2K[0G    âœ“ shows the version number (134ms)

  bin/swig render
    â—¦ nested_blocks: [2K[0G    âœ“ nested_blocks (125ms)

  bin/swig compile + run
    â—¦ include: [2K[0G    1) include

  bin/swig compile -m
    â—¦ minifies output: [2K[0G    âœ“ minifies output (150ms)

  bin/swig compile & run from swig
    â—¦ can be run: [2K[0G    âœ“ can be run (127ms)

  bin/swig render with custom extensions
    â—¦ works with custom filters: [2K[0G    âœ“ works with custom filters (124ms)
    â—¦ works with custom tags: [2K[0G    âœ“ works with custom tags (123ms)

  bin/swig custom options
    â—¦ change varControls: [2K[0G    âœ“ change varControls (125ms)
    â—¦ change tagControls: [2K[0G    âœ“ change tagControls (125ms)

  Comments
    â—¦ are ignored and removed from output: [2K[0G    âœ“ are ignored and removed from output 

  Filters:
    â—¦ defaultTZOffset affects date filter: [2K[0G    âœ“ defaultTZOffset affects date filter 
    â—¦ can accept params: [2K[0G    âœ“ can accept params 
    â—¦ can be very complexly nested: [2K[0G    âœ“ can be very complexly nested 
    â—¦ throws on unknown filter: [2K[0G    âœ“ throws on unknown filter 
    â—¦ gh-337: does not overwrite original data: [2K[0G    âœ“ gh-337: does not overwrite original data 
    â—¦ gh-365: filters applied to functions after dotkey: [2K[0G    âœ“ gh-365: filters applied to functions after dotkey 
    â—¦ gh-397: Filter index applied to functions with arguments is one-off: [2K[0G    âœ“ gh-397: Filter index applied to functions with arguments is one-off 
    â—¦ gh-441: Chaining filters on top of functions within tags: [2K[0G    âœ“ gh-441: Chaining filters on top of functions within tags 
    can be set
      â—¦ and used in templates: [2K[0G      âœ“ and used in templates 
      â—¦ and throw when you don't pass a function: [2K[0G      âœ“ and throw when you don't pass a function 
    addslashes
      â—¦ {{ v|addslashes }}, v="\"Top O' the\\ mornin\"" should render \&quot;Top O\&#39; the\\ mornin\&quot;: [2K[0G      âœ“ {{ v|addslashes }}, v="\"Top O' the\\ mornin\"" should render \&quot;Top O\&#39; the\\ mornin\&quot; 
      â—¦ {{ v|addslashes|raw }}, v=["\"Top","O'","the\\","mornin\""] should render \"Top,O\',the\\,mornin\": [2K[0G      âœ“ {{ v|addslashes|raw }}, v=["\"Top","O'","the\\","mornin\""] should render \"Top,O\',the\\,mornin\" 
    capitalize
      â—¦ {{ v|capitalize }}, v="awesome sAuce." should render Awesome sauce.: [2K[0G      âœ“ {{ v|capitalize }}, v="awesome sAuce." should render Awesome sauce. 
      â—¦ {{ v|capitalize }}, v=345 should render 345: [2K[0G      âœ“ {{ v|capitalize }}, v=345 should render 345 
      â—¦ {{ v|capitalize }}, v=["foo","bar"] should render Foo,Bar: [2K[0G      âœ“ {{ v|capitalize }}, v=["foo","bar"] should render Foo,Bar 
    date
      â—¦ {{ v|date("d") }}, v="2011-09-06T16:05:02.000Z" should render 06: [2K[0G      âœ“ {{ v|date("d") }}, v="2011-09-06T16:05:02.000Z" should render 06 
      â—¦ {{ v|date("D") }}, v="2011-09-06T16:05:02.000Z" should render Tue: [2K[0G      âœ“ {{ v|date("D") }}, v="2011-09-06T16:05:02.000Z" should render Tue 
      â—¦ {{ v|date("j") }}, v="2011-09-06T16:05:02.000Z" should render 6: [2K[0G      âœ“ {{ v|date("j") }}, v="2011-09-06T16:05:02.000Z" should render 6 
      â—¦ {{ v|date("l") }}, v="2011-09-06T16:05:02.000Z" should render Tuesday: [2K[0G      âœ“ {{ v|date("l") }}, v="2011-09-06T16:05:02.000Z" should render Tuesday 
      â—¦ {{ v|date("N") }}, v="2011-09-06T16:05:02.000Z" should render 2: [2K[0G      âœ“ {{ v|date("N") }}, v="2011-09-06T16:05:02.000Z" should render 2 
      â—¦ {{ v|date("N") }}, v="2011-09-04T07:00:00.000Z" should render 7: [2K[0G      âœ“ {{ v|date("N") }}, v="2011-09-04T07:00:00.000Z" should render 7 
      â—¦ {{ v|date("S") }}, v="2011-09-06T16:05:02.000Z" should render th: [2K[0G      âœ“ {{ v|date("S") }}, v="2011-09-06T16:05:02.000Z" should render th 
      â—¦ {{ v|date("w") }}, v="2011-09-06T16:05:02.000Z" should render 2: [2K[0G      âœ“ {{ v|date("w") }}, v="2011-09-06T16:05:02.000Z" should render 2 
      â—¦ {{ v|date("z") }}, v="2011-09-06T16:05:02.000Z" should render 248: [2K[0G      âœ“ {{ v|date("z") }}, v="2011-09-06T16:05:02.000Z" should render 248 
      â—¦ {{ v|date("z", 480) }}, v="2011-01-01T08:00:00.000Z" should render 0: [2K[0G      âœ“ {{ v|date("z", 480) }}, v="2011-01-01T08:00:00.000Z" should render 0 
      â—¦ {{ v|date("z", 480) }}, v="2011-12-31T08:00:00.000Z" should render 364: [2K[0G      âœ“ {{ v|date("z", 480) }}, v="2011-12-31T08:00:00.000Z" should render 364 
      â—¦ {{ v|date("W") }}, v="2011-09-06T16:05:02.000Z" should render 36: [2K[0G      âœ“ {{ v|date("W") }}, v="2011-09-06T16:05:02.000Z" should render 36 
      â—¦ {{ v|date("F") }}, v="2011-09-06T16:05:02.000Z" should render September: [2K[0G      âœ“ {{ v|date("F") }}, v="2011-09-06T16:05:02.000Z" should render September 
      â—¦ {{ v|date("m") }}, v="2011-09-06T16:05:02.000Z" should render 09: [2K[0G      âœ“ {{ v|date("m") }}, v="2011-09-06T16:05:02.000Z" should render 09 
      â—¦ {{ v|date("M") }}, v="2011-09-06T16:05:02.000Z" should render Sep: [2K[0G      âœ“ {{ v|date("M") }}, v="2011-09-06T16:05:02.000Z" should render Sep 
      â—¦ {{ v|date("n") }}, v="2011-09-06T16:05:02.000Z" should render 9: [2K[0G      âœ“ {{ v|date("n") }}, v="2011-09-06T16:05:02.000Z" should render 9 
      â—¦ {{ v|date("t") }}, v="2011-09-06T16:05:02.000Z" should render 30: [2K[0G      âœ“ {{ v|date("t") }}, v="2011-09-06T16:05:02.000Z" should render 30 
      â—¦ {{ v|date("L") }}, v="2011-09-06T16:05:02.000Z" should render false: [2K[0G      âœ“ {{ v|date("L") }}, v="2011-09-06T16:05:02.000Z" should render false 
      â—¦ {{ v|date("L", 480) }}, v="2008-02-29T08:00:00.000Z" should render true: [2K[0G      âœ“ {{ v|date("L", 480) }}, v="2008-02-29T08:00:00.000Z" should render true 
      â—¦ {{ v|date("o") }}, v="2011-09-06T16:05:02.000Z" should render 2011: [2K[0G      âœ“ {{ v|date("o") }}, v="2011-09-06T16:05:02.000Z" should render 2011 
      â—¦ {{ v|date("o", 480) }}, v="2011-01-01T08:00:00.000Z" should render 2010: [2K[0G      âœ“ {{ v|date("o", 480) }}, v="2011-01-01T08:00:00.000Z" should render 2010 
      â—¦ {{ v|date("Y") }}, v="2011-09-06T16:05:02.000Z" should render 2011: [2K[0G      âœ“ {{ v|date("Y") }}, v="2011-09-06T16:05:02.000Z" should render 2011 
      â—¦ {{ v|date("y") }}, v="2011-09-06T16:05:02.000Z" should render 11: [2K[0G      âœ“ {{ v|date("y") }}, v="2011-09-06T16:05:02.000Z" should render 11 
      â—¦ {{ v|date("a") }}, v="2011-09-06T16:05:02.000Z" should render am: [2K[0G      âœ“ {{ v|date("a") }}, v="2011-09-06T16:05:02.000Z" should render am 
      â—¦ {{ v|date("A") }}, v="2011-09-06T16:05:02.000Z" should render AM: [2K[0G      âœ“ {{ v|date("A") }}, v="2011-09-06T16:05:02.000Z" should render AM 
      â—¦ {{ v|date("B") }}, v="2011-09-06T16:05:02.000Z" should render 712: [2K[0G      âœ“ {{ v|date("B") }}, v="2011-09-06T16:05:02.000Z" should render 712 
      â—¦ {{ v|date("g") }}, v="2011-09-06T16:05:02.000Z" should render 9: [2K[0G      âœ“ {{ v|date("g") }}, v="2011-09-06T16:05:02.000Z" should render 9 
      â—¦ {{ v|date("G") }}, v="2011-09-06T16:05:02.000Z" should render 9: [2K[0G      âœ“ {{ v|date("G") }}, v="2011-09-06T16:05:02.000Z" should render 9 
      â—¦ {{ v|date("h") }}, v="2011-09-06T16:05:02.000Z" should render 09: [2K[0G      âœ“ {{ v|date("h") }}, v="2011-09-06T16:05:02.000Z" should render 09 
      â—¦ {{ v|date("h", 480) }}, v="2011-01-01T18:00:00.000Z" should render 10: [2K[0G      âœ“ {{ v|date("h", 480) }}, v="2011-01-01T18:00:00.000Z" should render 10 
      â—¦ {{ v|date("H") }}, v="2011-09-06T16:05:02.000Z" should render 09: [2K[0G      âœ“ {{ v|date("H") }}, v="2011-09-06T16:05:02.000Z" should render 09 
      â—¦ {{ v|date("i") }}, v="2011-09-06T16:05:02.000Z" should render 05: [2K[0G      âœ“ {{ v|date("i") }}, v="2011-09-06T16:05:02.000Z" should render 05 
      â—¦ {{ v|date("s") }}, v="2011-09-06T16:05:02.000Z" should render 02: [2K[0G      âœ“ {{ v|date("s") }}, v="2011-09-06T16:05:02.000Z" should render 02 
      â—¦ {{ v|date("d-m-Y") }}, v="2011-09-06T16:05:02.000Z" should render 06-09-2011: [2K[0G      âœ“ {{ v|date("d-m-Y") }}, v="2011-09-06T16:05:02.000Z" should render 06-09-2011 
      â—¦ {{ v|date("O") }}, v="2011-09-06T16:05:02.000Z" should render +0700: [2K[0G      âœ“ {{ v|date("O") }}, v="2011-09-06T16:05:02.000Z" should render +0700 
      â—¦ {{ v|date("O", -120) }}, v="2011-01-01T22:00:00.000Z" should render -0200: [2K[0G      âœ“ {{ v|date("O", -120) }}, v="2011-01-01T22:00:00.000Z" should render -0200 
      â—¦ {{ v|date("Z") }}, v="2011-09-06T16:05:02.000Z" should render 25200: [2K[0G      âœ“ {{ v|date("Z") }}, v="2011-09-06T16:05:02.000Z" should render 25200 
      â—¦ {{ v|date("O", 360) }}, v="2011-09-06T16:05:02.000Z" should render +0600: [2K[0G      âœ“ {{ v|date("O", 360) }}, v="2011-09-06T16:05:02.000Z" should render +0600 
      â—¦ {{ v|date("G", 320) }}, v="2011-09-06T16:05:02.000Z" should render 10: [2K[0G      âœ“ {{ v|date("G", 320) }}, v="2011-09-06T16:05:02.000Z" should render 10 
      â—¦ {{ v|date("c") }}, v="2011-09-06T16:05:02.000Z" should render 2011-09-06T16:05:02.000Z: [2K[0G      âœ“ {{ v|date("c") }}, v="2011-09-06T16:05:02.000Z" should render 2011-09-06T16:05:02.000Z 
      â—¦ {{ v|date("r") }}, v="2011-09-06T16:05:02.000Z" should render Tue, 06 Sep 2011 16:05:02 GMT: [2K[0G      âœ“ {{ v|date("r") }}, v="2011-09-06T16:05:02.000Z" should render Tue, 06 Sep 2011 16:05:02 GMT 
      â—¦ {{ v|date("U") }}, v="2011-09-06T16:05:02.000Z" should render 1315325102: [2K[0G      âœ“ {{ v|date("U") }}, v="2011-09-06T16:05:02.000Z" should render 1315325102 
      â—¦ {{ v|date("S") }}, v="2011-09-01T07:00:00.000Z" should render st: [2K[0G      âœ“ {{ v|date("S") }}, v="2011-09-01T07:00:00.000Z" should render st 
      â—¦ {{ v|date("S") }}, v="2011-09-02T07:00:00.000Z" should render nd: [2K[0G      âœ“ {{ v|date("S") }}, v="2011-09-02T07:00:00.000Z" should render nd 
      â—¦ {{ v|date("S") }}, v="2011-09-03T07:00:00.000Z" should render rd: [2K[0G      âœ“ {{ v|date("S") }}, v="2011-09-03T07:00:00.000Z" should render rd 
      â—¦ {{ v|date("S") }}, v="2011-09-04T07:00:00.000Z" should render th: [2K[0G      âœ“ {{ v|date("S") }}, v="2011-09-04T07:00:00.000Z" should render th 
      â—¦ {{ v|date("S") }}, v="2011-09-10T07:00:00.000Z" should render th: [2K[0G      âœ“ {{ v|date("S") }}, v="2011-09-10T07:00:00.000Z" should render th 
      â—¦ {{ v|date("S") }}, v="2011-09-11T07:00:00.000Z" should render th: [2K[0G      âœ“ {{ v|date("S") }}, v="2011-09-11T07:00:00.000Z" should render th 
      â—¦ {{ v|date("S") }}, v="2011-09-12T07:00:00.000Z" should render th: [2K[0G      âœ“ {{ v|date("S") }}, v="2011-09-12T07:00:00.000Z" should render th 
      â—¦ {{ v|date("S") }}, v="2011-09-13T07:00:00.000Z" should render th: [2K[0G      âœ“ {{ v|date("S") }}, v="2011-09-13T07:00:00.000Z" should render th 
      â—¦ {{ v|date("S") }}, v="2011-09-21T07:00:00.000Z" should render st: [2K[0G      âœ“ {{ v|date("S") }}, v="2011-09-21T07:00:00.000Z" should render st 
      â—¦ {{ v|date("S") }}, v="2011-09-22T07:00:00.000Z" should render nd: [2K[0G      âœ“ {{ v|date("S") }}, v="2011-09-22T07:00:00.000Z" should render nd 
      â—¦ {{ v|date("S") }}, v="2011-09-23T07:00:00.000Z" should render rd: [2K[0G      âœ“ {{ v|date("S") }}, v="2011-09-23T07:00:00.000Z" should render rd 
      â—¦ {{ v|date("\D") }}, v="2011-09-06T16:05:02.000Z" should render D: [2K[0G      âœ“ {{ v|date("\D") }}, v="2011-09-06T16:05:02.000Z" should render D 
      â—¦ {{ v|date("\t\e\s\t") }}, v="2011-09-06T16:05:02.000Z" should render test: [2K[0G      âœ“ {{ v|date("\t\e\s\t") }}, v="2011-09-06T16:05:02.000Z" should render test 
      â—¦ {{ v|date("\\D") }}, v="2011-09-06T16:05:02.000Z" should render \Tue: [2K[0G      âœ“ {{ v|date("\\D") }}, v="2011-09-06T16:05:02.000Z" should render \Tue 
      â—¦ {{ v|date("jS \o\f F") }}, v="2012-07-04T07:00:00.000Z" should render 4th of July: [2K[0G      âœ“ {{ v|date("jS \o\f F") }}, v="2012-07-04T07:00:00.000Z" should render 4th of July 
    default
      â—¦ {{ v|default("tacos") }}, v="foo" should render foo: [2K[0G      âœ“ {{ v|default("tacos") }}, v="foo" should render foo 
      â—¦ {{ v|default("tacos") }}, v=0 should render 0: [2K[0G      âœ“ {{ v|default("tacos") }}, v=0 should render 0 
      â—¦ {{ v|default("tacos") }}, v="" should render tacos: [2K[0G      âœ“ {{ v|default("tacos") }}, v="" should render tacos 
      â—¦ {{ v|default("tacos") }}, v=undefined should render tacos: [2K[0G      âœ“ {{ v|default("tacos") }}, v=undefined should render tacos 
      â—¦ {{ v|default("tacos") }}, v=null should render tacos: [2K[0G      âœ“ {{ v|default("tacos") }}, v=null should render tacos 
      â—¦ {{ v|default("tacos") }}, v=false should render tacos: [2K[0G      âœ“ {{ v|default("tacos") }}, v=false should render tacos 
    escape
      â—¦ {{ v|escape }}, v="<foo>" should render &lt;foo&gt;: [2K[0G      âœ“ {{ v|escape }}, v="<foo>" should render &lt;foo&gt; 
      â—¦ {{ v|e("js") }}, v="\"double quotes\" and 'single quotes'" should render \u0022double quotes\u0022 and \u0027single quotes\u0027: [2K[0G      âœ“ {{ v|e("js") }}, v="\"double quotes\" and 'single quotes'" should render \u0022double quotes\u0022 and \u0027single quotes\u0027 
      â—¦ {{ v|escape("js") }}, v="<script>and this</script>" should render \u003Cscript\u003Eand this\u003C/script\u003E: [2K[0G      âœ“ {{ v|escape("js") }}, v="<script>and this</script>" should render \u003Cscript\u003Eand this\u003C/script\u003E 
      â—¦ {{ v|e("js") }}, v="\\ : backslashes, too" should render \u005C : backslashes, too: [2K[0G      âœ“ {{ v|e("js") }}, v="\\ : backslashes, too" should render \u005C : backslashes, too 
      â—¦ {{ v|e("js") }}, v="and lots of whitespace: \r\n\t\u000b\f\b" should render and lots of whitespace: \u000D\u000A\u0009\u000B\u000C\u0008: [2K[0G      âœ“ {{ v|e("js") }}, v="and lots of whitespace: \r\n\t\u000b\f\b" should render and lots of whitespace: \u000D\u000A\u0009\u000B\u000C\u0008 
      â—¦ {{ v|e("js") }}, v="and \"special\" chars = -1;" should render and \u0022special\u0022 chars \u003D \u002D1\u003B: [2K[0G      âœ“ {{ v|e("js") }}, v="and \"special\" chars = -1;" should render and \u0022special\u0022 chars \u003D \u002D1\u003B 
      â—¦ {{ v|e }}, v=["<p>","</p>"] should render &lt;p&gt;,&lt;/p&gt;: [2K[0G      âœ“ {{ v|e }}, v=["<p>","</p>"] should render &lt;p&gt;,&lt;/p&gt; 
    first
      â—¦ {{ v|first }}, v=[1,2,3,4] should render 1: [2K[0G      âœ“ {{ v|first }}, v=[1,2,3,4] should render 1 
      â—¦ {{ v|first }}, v="213" should render 2: [2K[0G      âœ“ {{ v|first }}, v="213" should render 2 
      â—¦ {{ v|first }}, v={"foo":"blah"} should render blah: [2K[0G      âœ“ {{ v|first }}, v={"foo":"blah"} should render blah 
    groupBy
      â—¦ {{ v|groupBy("name")|json }}, v=[{"name":"a","a":1},{"name":"a","a":2},{"name":"b","a":3}] should render {&quot;a&quot;:[{&quot;a&quot;:1},{&quot;a&quot;:2}],&quot;b&quot;:[{&quot;a&quot;:3}]}: [2K[0G      âœ“ {{ v|groupBy("name")|json }}, v=[{"name":"a","a":1},{"name":"a","a":2},{"name":"b","a":3}] should render {&quot;a&quot;:[{&quot;a&quot;:1},{&quot;a&quot;:2}],&quot;b&quot;:[{&quot;a&quot;:3}]} 
      â—¦ {{ v|groupBy("name") }}, v="foo" should render foo: [2K[0G      âœ“ {{ v|groupBy("name") }}, v="foo" should render foo 
    join
      â—¦ {{ v|join("+") }}, v=[1,2,3] should render 1+2+3: [2K[0G      âœ“ {{ v|join("+") }}, v=[1,2,3] should render 1+2+3 
      â—¦ {{ v|join(" * ") }}, v=[1,2,3] should render 1 * 2 * 3: [2K[0G      âœ“ {{ v|join(" * ") }}, v=[1,2,3] should render 1 * 2 * 3 
      â—¦ {{ v|join(",") }}, v=[1,2,3] should render 1,2,3: [2K[0G      âœ“ {{ v|join(",") }}, v=[1,2,3] should render 1,2,3 
      â—¦ {{ v|join(", ") }}, v={"f":1,"b":2,"z":3} should render 1, 2, 3: [2K[0G      âœ“ {{ v|join(", ") }}, v={"f":1,"b":2,"z":3} should render 1, 2, 3 
      â—¦ {{ v|join("-") }}, v="asdf" should render asdf: [2K[0G      âœ“ {{ v|join("-") }}, v="asdf" should render asdf 
    json
      â—¦ {{ v|json }}, v={"foo":"bar","baz":[1,2,3]} should render {&quot;foo&quot;:&quot;bar&quot;,&quot;baz&quot;:[1,2,3]}: [2K[0G      âœ“ {{ v|json }}, v={"foo":"bar","baz":[1,2,3]} should render {&quot;foo&quot;:&quot;bar&quot;,&quot;baz&quot;:[1,2,3]} 
      â—¦ {{ v|json(2) }}, v={"foo":"bar","baz":[1,2,3]} should render {\n  &quot;foo&quot;: &quot;bar&quot;,\n  &quot;baz&quot;: [\n    1,\n    2,\n    3\n  ]\n}: [2K[0G      âœ“ {{ v|json(2) }}, v={"foo":"bar","baz":[1,2,3]} should render {\n  &quot;foo&quot;: &quot;bar&quot;,\n  &quot;baz&quot;: [\n    1,\n    2,\n    3\n  ]\n} 
    last
      â—¦ {{ v|last }}, v=[1,2,3,4] should render 4: [2K[0G      âœ“ {{ v|last }}, v=[1,2,3,4] should render 4 
      â—¦ {{ v|last }}, v="123" should render 3: [2K[0G      âœ“ {{ v|last }}, v="123" should render 3 
      â—¦ {{ v|last }}, v={"foo":"blah","bar":"nope"} should render nope: [2K[0G      âœ“ {{ v|last }}, v={"foo":"blah","bar":"nope"} should render nope 
    lower
      â—¦ {{ v|lower }}, v="BaR" should render bar: [2K[0G      âœ“ {{ v|lower }}, v="BaR" should render bar 
      â—¦ {{ v|lower }}, v="345" should render 345: [2K[0G      âœ“ {{ v|lower }}, v="345" should render 345 
      â—¦ {{ v|lower }}, v=["FOO","bAr"] should render foo,bar: [2K[0G      âœ“ {{ v|lower }}, v=["FOO","bAr"] should render foo,bar 
      â—¦ {{ v|lower|join("") }}, v={"foo":"BAR"} should render bar: [2K[0G      âœ“ {{ v|lower|join("") }}, v={"foo":"BAR"} should render bar 
    safe
      â—¦ {{ v|safe }}, v="<&>" should render <&>: [2K[0G      âœ“ {{ v|safe }}, v="<&>" should render <&> 
      â—¦ {{ v|raw }}, v="<&>" should render <&>: [2K[0G      âœ“ {{ v|raw }}, v="<&>" should render <&> 
      â—¦ {{ v|first|safe }}, v=["<&>"] should render <&>: [2K[0G      âœ“ {{ v|first|safe }}, v=["<&>"] should render <&> 
      â—¦ {{ v|safe|lower }}, v="<&>fOo" should render <&>foo: [2K[0G      âœ“ {{ v|safe|lower }}, v="<&>fOo" should render <&>foo 
    replace
      â—¦ {{ v|replace("o", "a") }}, v="foo" should render fao: [2K[0G      âœ“ {{ v|replace("o", "a") }}, v="foo" should render fao 
      â—¦ {{ v|replace("o", "", "g") }}, v="fooboo" should render fb: [2K[0G      âœ“ {{ v|replace("o", "", "g") }}, v="fooboo" should render fb 
      â—¦ {{ v|replace("\W+", "-") }}, v="$*&1aZ" should render -1aZ: [2K[0G      âœ“ {{ v|replace("\W+", "-") }}, v="$*&1aZ" should render -1aZ 
    reverse
      â—¦ {{ v|reverse }}, v=[1,2,3] should render 3,2,1: [2K[0G      âœ“ {{ v|reverse }}, v=[1,2,3] should render 3,2,1 
      â—¦ {{ v|reverse }}, v="asdf" should render fdsa: [2K[0G      âœ“ {{ v|reverse }}, v="asdf" should render fdsa 
      â—¦ {{ v|reverse }}, v={"baz":"bop","foo":"bar"} should render foo,baz: [2K[0G      âœ“ {{ v|reverse }}, v={"baz":"bop","foo":"bar"} should render foo,baz 
    sort
      â—¦ {{ v|sort }}, v=[3,1,4] should render 1,3,4: [2K[0G      âœ“ {{ v|sort }}, v=[3,1,4] should render 1,3,4 
      â—¦ {{ v|sort }}, v="zaq" should render aqz: [2K[0G      âœ“ {{ v|sort }}, v="zaq" should render aqz 
      â—¦ {{ v|sort }}, v={"foo":"1","bar":"2"} should render bar,foo: [2K[0G      âœ“ {{ v|sort }}, v={"foo":"1","bar":"2"} should render bar,foo 
    striptags
      â—¦ {{ v|striptags }}, v="<h1>foo</h1> <div class=\"blah\">hi</div>" should render foo hi: [2K[0G      âœ“ {{ v|striptags }}, v="<h1>foo</h1> <div class=\"blah\">hi</div>" should render foo hi 
      â—¦ {{ v|striptags }}, v=["<foo>bar</foo>","<bar>foo"] should render bar,foo: [2K[0G      âœ“ {{ v|striptags }}, v=["<foo>bar</foo>","<bar>foo"] should render bar,foo 
    title
      â—¦ {{ v|title }}, v="this iS titLe case" should render This Is Title Case: [2K[0G      âœ“ {{ v|title }}, v="this iS titLe case" should render This Is Title Case 
      â—¦ {{ v|title }}, v=["foo","bAr"] should render Foo,Bar: [2K[0G      âœ“ {{ v|title }}, v=["foo","bAr"] should render Foo,Bar 
    uniq
      â—¦ {{ v|uniq }}, v=[2,1,2,3,4,4] should render 2,1,3,4: [2K[0G      âœ“ {{ v|uniq }}, v=[2,1,2,3,4,4] should render 2,1,3,4 
      â—¦ {{ v|uniq }}, v="foo" should render : [2K[0G      âœ“ {{ v|uniq }}, v="foo" should render  
    upper
      â—¦ {{ v|upper }}, v="bar" should render BAR: [2K[0G      âœ“ {{ v|upper }}, v="bar" should render BAR 
      â—¦ {{ v|upper }}, v=345 should render 345: [2K[0G      âœ“ {{ v|upper }}, v=345 should render 345 
      â—¦ {{ v|upper }}, v=["foo","bAr"] should render FOO,BAR: [2K[0G      âœ“ {{ v|upper }}, v=["foo","bAr"] should render FOO,BAR 
      â—¦ {{ v|upper|join("") }}, v={"foo":"bar"} should render BAR: [2K[0G      âœ“ {{ v|upper|join("") }}, v={"foo":"bar"} should render BAR 
    url_encode
      â—¦ {{ v|url_encode }}, v="param=1&anotherParam=2" should render param%3D1%26anotherParam%3D2: [2K[0G      âœ“ {{ v|url_encode }}, v="param=1&anotherParam=2" should render param%3D1%26anotherParam%3D2 
      â—¦ {{ v|url_encode }}, v=["param=1","anotherParam=2"] should render param%3D1,anotherParam%3D2: [2K[0G      âœ“ {{ v|url_encode }}, v=["param=1","anotherParam=2"] should render param%3D1,anotherParam%3D2 
    url_decode
      â—¦ {{ v|url_decode }}, v="param%3D1%26anotherParam%3D2" should render param=1&amp;anotherParam=2: [2K[0G      âœ“ {{ v|url_decode }}, v="param%3D1%26anotherParam%3D2" should render param=1&amp;anotherParam=2 
      â—¦ {{ v|url_decode }}, v=["param%3D1","anotherParam%3D2"] should render param=1,anotherParam=2: [2K[0G      âœ“ {{ v|url_decode }}, v=["param%3D1","anotherParam%3D2"] should render param=1,anotherParam=2 

  swig.loaders
    API
      â—¦ requires load and resolve methods: [2K[0G      âœ“ requires load and resolve methods 
    Memory
      â—¦ can use extends: [2K[0G      âœ“ can use extends 
      â—¦ can use include: [2K[0G      âœ“ can use include 
      â—¦ can use base paths: [2K[0G      âœ“ can use base paths 
      â—¦ throws on undefined template: [2K[0G      âœ“ throws on undefined template 
      â—¦ will run asynchronously: [2K[0G      âœ“ will run asynchronously 
    FileSystem
      â—¦ is the default: [2K[0G      âœ“ is the default 
      â—¦ can take a base path: [2K[0G      âœ“ can take a base path 
      â—¦ will run asynchronously: [2K[0G      âœ“ will run asynchronously 
      â—¦ takes cwd as default base path: [2K[0G      âœ“ takes cwd as default base path 

  Regressions
    â—¦ gh-285: preserves forward-slashes in text: [2K[0G    âœ“ gh-285: preserves forward-slashes in text 
    â—¦ gh-303: sets work in loops: [2K[0G    âœ“ gh-303: sets work in loops 
    â—¦ gh-322: logic words are not partially matched: [2K[0G    âœ“ gh-322: logic words are not partially matched 
    â—¦ gh-323: stuff: [2K[0G    âœ“ gh-323: stuff 
    â—¦ gh-287: Options object overwrite exposure: [2K[0G    âœ“ gh-287: Options object overwrite exposure 

  Tag: autoescape
    â—¦ {% autoescape true %} turns escaping on: [2K[0G    âœ“ {% autoescape true %} turns escaping on 
    â—¦ {% autoescape "js" %} escapes for js: [2K[0G    âœ“ {% autoescape "js" %} escapes for js 
    â—¦ {% autoescape false %} turns escaping off: [2K[0G    âœ“ {% autoescape false %} turns escaping off 
    â—¦ {% autoescape whatthewhat %} throws because unknown argument: [2K[0G    âœ“ {% autoescape whatthewhat %} throws because unknown argument 

  Tag: else
    â—¦ {% if true %}{% else %}: [2K[0G    âœ“ {% if true %}{% else %} 
    â—¦ {% if false %}{% else %}: [2K[0G    âœ“ {% if false %}{% else %} 
    â—¦ must be within an {% if %}: [2K[0G    âœ“ must be within an {% if %} 
    â—¦ does not accept conditionals/args (use elseif, elif): [2K[0G    âœ“ does not accept conditionals/args (use elseif, elif) 

  Tag: elseif, elif
    â—¦ {% if false %}{% elseif true %}: [2K[0G    âœ“ {% if false %}{% elseif true %} 
    â—¦ {% if false %}{% elseif false %}: [2K[0G    âœ“ {% if false %}{% elseif false %} 
    â—¦ {% if false %}{% elseif foo > 1 %}: [2K[0G    âœ“ {% if false %}{% elseif foo > 1 %} 
    â—¦ must be within an {% if %}: [2K[0G    âœ“ must be within an {% if %} 
    â—¦ requires a conditional: [2K[0G    âœ“ requires a conditional 

  Tag: extends
    â—¦ throws if template has no filename: [2K[0G    âœ“ throws if template has no filename 

  Tag: filter
    â—¦ {% filter upper %}: [2K[0G    âœ“ {% filter upper %} 
    â—¦ {% filter default("foobar") %}: [2K[0G    âœ“ {% filter default("foobar") %} 
    â—¦ {% filter replace("s", "d", "g") %}: [2K[0G    âœ“ {% filter replace("s", "d", "g") %} 
    â—¦ {% filter default(fn("foo")) %}: [2K[0G    âœ“ {% filter default(fn("foo")) %} 
    â—¦ {% filter default(foo) %}: [2K[0G    âœ“ {% filter default(foo) %} 
    â—¦ throws on non-existent filter: [2K[0G    âœ“ throws on non-existent filter 

  Tag: for
    â—¦ {% for a in b %}{{ a }}{% endfor %} should render "123": [2K[0G    âœ“ {% for a in b %}{{ a }}{% endfor %} should render "123" 
    â—¦ {% for a in [1,2,3] %}{{ a }}{% endfor %} should render "123": [2K[0G    âœ“ {% for a in [1,2,3] %}{{ a }}{% endfor %} should render "123" 
    â—¦ {% for a in b %}{{ loop.index }}{% endfor %} should render "123": [2K[0G    âœ“ {% for a in b %}{{ loop.index }}{% endfor %} should render "123" 
    â—¦ {% for a in c %}{{ loop.index }}{% endfor %} should render "12": [2K[0G    âœ“ {% for a in c %}{{ loop.index }}{% endfor %} should render "12" 
    â—¦ {% for a in b %}{{ loop.index0 }}{% endfor %} should render "012": [2K[0G    âœ“ {% for a in b %}{{ loop.index0 }}{% endfor %} should render "012" 
    â—¦ {% for a in c %}{{ loop.index0 }}{% endfor %} should render "01": [2K[0G    âœ“ {% for a in c %}{{ loop.index0 }}{% endfor %} should render "01" 
    â—¦ {% for a in b %}{{ loop.revindex }}{% endfor %} should render "321": [2K[0G    âœ“ {% for a in b %}{{ loop.revindex }}{% endfor %} should render "321" 
    â—¦ {% for a in c %}{{ loop.revindex }}{% endfor %} should render "21": [2K[0G    âœ“ {% for a in c %}{{ loop.revindex }}{% endfor %} should render "21" 
    â—¦ {% for a in b %}{{ loop.revindex0 }}{% endfor %} should render "210": [2K[0G    âœ“ {% for a in b %}{{ loop.revindex0 }}{% endfor %} should render "210" 
    â—¦ {% for a in c %}{{ loop.revindex0 }}{% endfor %} should render "10": [2K[0G    âœ“ {% for a in c %}{{ loop.revindex0 }}{% endfor %} should render "10" 
    â—¦ {% for a in b %}{{ loop.key }}{% endfor %} should render "012": [2K[0G    âœ“ {% for a in b %}{{ loop.key }}{% endfor %} should render "012" 
    â—¦ {% for a in c %}{{ loop.key }}{% endfor %} should render "ab": [2K[0G    âœ“ {% for a in c %}{{ loop.key }}{% endfor %} should render "ab" 
    â—¦ {% for a,b in b %}{{ loop.key }}{% endfor %} should render "012": [2K[0G    âœ“ {% for a,b in b %}{{ loop.key }}{% endfor %} should render "012" 
    â—¦ {% for a,b in c %}{{ loop.key }}{% endfor %} should render "ab": [2K[0G    âœ“ {% for a,b in c %}{{ loop.key }}{% endfor %} should render "ab" 
    â—¦ {% for a in b %}{{ loop.first }}, {% endfor %} should render "true, false, false, ": [2K[0G    âœ“ {% for a in b %}{{ loop.first }}, {% endfor %} should render "true, false, false, " 
    â—¦ {% for a in b %}{{ loop.last }}, {% endfor %} should render "false, false, true, ": [2K[0G    âœ“ {% for a in b %}{{ loop.last }}, {% endfor %} should render "false, false, true, " 
    â—¦ {% for a in c %}{{ loop.first }}, {% endfor %} should render "true, false, ": [2K[0G    âœ“ {% for a in c %}{{ loop.first }}, {% endfor %} should render "true, false, " 
    â—¦ {% for a in c %}{{ loop.last }}, {% endfor %} should render "false, true, ": [2K[0G    âœ“ {% for a in c %}{{ loop.last }}, {% endfor %} should render "false, true, " 
    â—¦ {% for a,b in b %}{{ a }}{{ b }}{% endfor %} should render "011223": [2K[0G    âœ“ {% for a,b in b %}{{ a }}{{ b }}{% endfor %} should render "011223" 
    â—¦ {% for a, b in c %}{{ b }}{% endfor %} should render "applebanana": [2K[0G    âœ“ {% for a, b in c %}{{ b }}{% endfor %} should render "applebanana" 
    â—¦ {% for a in d|default(["a"]) %}{{ a }}{% endfor %} should render "a": [2K[0G    âœ“ {% for a in d|default(["a"]) %}{{ a }}{% endfor %} should render "a" 
    â—¦ {% for a in q %}hi{% endfor %} should render "": [2K[0G    âœ“ {% for a in q %}hi{% endfor %} should render "" 
    â—¦ {% for a in b %}{% for d in c %}{% for a in b %}{% endfor %}{% endfor %}{% if loop.last %}last happens only once{% endif %}{% endfor %} should render "last happens only once": [2K[0G    âœ“ {% for a in b %}{% for d in c %}{% for a in b %}{% endfor %}{% endfor %}{% if loop.last %}last happens only once{% endif %}{% endfor %} should render "last happens only once" 
    â—¦ {% for a in "foobar"|reverse %}{{ a }}{% endfor %} should render "raboof": [2K[0G    âœ“ {% for a in "foobar"|reverse %}{{ a }}{% endfor %} should render "raboof" 
    â—¦ resets loop and vars: [2K[0G    âœ“ resets loop and vars 
    â—¦ throws on numbers as any argument: [2K[0G    âœ“ throws on numbers as any argument 
    â—¦ throws on any comparator: [2K[0G    âœ“ throws on any comparator 

  Tag: if
    â—¦ {% if foo %}: [2K[0G    âœ“ {% if foo %} 
    â—¦ {% if true %}: [2K[0G    âœ“ {% if true %} 
    â—¦ {% if false %}: [2K[0G    âœ“ {% if false %} 
    â—¦ {% if foo > bar %}: [2K[0G    âœ“ {% if foo > bar %} 
    â—¦ {% if foo gt bar %}: [2K[0G    âœ“ {% if foo gt bar %} 
    â—¦ {% if foo >= foo %}: [2K[0G    âœ“ {% if foo >= foo %} 
    â—¦ {% if foo gte bar %}: [2K[0G    âœ“ {% if foo gte bar %} 
    â—¦ {% if foo >= bar %}: [2K[0G    âœ“ {% if foo >= bar %} 
    â—¦ {% if foo < bar %}: [2K[0G    âœ“ {% if foo < bar %} 
    â—¦ {% if foo lt bar %}: [2K[0G    âœ“ {% if foo lt bar %} 
    â—¦ {% if bar <= bar %}: [2K[0G    âœ“ {% if bar <= bar %} 
    â—¦ {% if foo <= bar %}: [2K[0G    âœ“ {% if foo <= bar %} 
    â—¦ {% if foo lte bar %}: [2K[0G    âœ“ {% if foo lte bar %} 
    â—¦ {% if foo !== bar %}: [2K[0G    âœ“ {% if foo !== bar %} 
    â—¦ {% if foo != bar %}: [2K[0G    âœ“ {% if foo != bar %} 
    â—¦ {% if !foo %}: [2K[0G    âœ“ {% if !foo %} 
    â—¦ {% if not foo %}: [2K[0G    âœ“ {% if not foo %} 
    â—¦ {% if !bar %}: [2K[0G    âœ“ {% if !bar %} 
    â—¦ {% if not bar %}: [2K[0G    âœ“ {% if not bar %} 
    â—¦ {% if foo in baz %}: [2K[0G    âœ“ {% if foo in baz %} 
    â—¦ {% if bar in baz %}: [2K[0G    âœ“ {% if bar in baz %} 
    â—¦ {% if 1 < 0 %}: [2K[0G    âœ“ {% if 1 < 0 %} 
    â—¦ {% if "a" === "a" %}: [2K[0G    âœ“ {% if "a" === "a" %} 
    â—¦ {% if 1 === foo %}: [2K[0G    âœ“ {% if 1 === foo %} 
    â—¦ {% if 1 === bar %}: [2K[0G    âœ“ {% if 1 === bar %} 
    â—¦ {% if true && false %}: [2K[0G    âœ“ {% if true && false %} 
    â—¦ {% if 0 || (bar && foo) %}: [2K[0G    âœ“ {% if 0 || (bar && foo) %} 
    â—¦ {% if not (2 in baz) %}: [2K[0G    âœ“ {% if not (2 in baz) %} 
    â—¦ requires a conditional: [2K[0G    âœ“ requires a conditional 
    â—¦ throws on bad logic: [2K[0G    âœ“ throws on bad logic 

  Tag: import
    â—¦ throws on bad arguments: [2K[0G    âœ“ throws on bad arguments 

  Tag: include
    â—¦ Works with non-relative loader setups: [2K[0G    âœ“ Works with non-relative loader setups 
    {% include "foo" ignore missing %}
      â—¦ does not throw if missing: [2K[0G      âœ“ does not throw if missing 
      â—¦ throws on bad syntax: [2K[0G      âœ“ throws on bad syntax 

  Tag: macro
    â—¦ {% macro tacos() %}: [2K[0G    âœ“ {% macro tacos() %} 
    â—¦ {% macro tacos(a, b, c) %}: [2K[0G    âœ“ {% macro tacos(a, b, c) %} 
    â—¦ does not auto-escape: [2K[0G    âœ“ does not auto-escape 
    â—¦ throws on bad argument names: [2K[0G    âœ“ throws on bad argument names 
    â—¦ gh-457: local context is copied and overwritten within macro context: [2K[0G    âœ“ gh-457: local context is copied and overwritten within macro context 
    â—¦ gh-499: a macro can be set to a variable: [2K[0G    âœ“ gh-499: a macro can be set to a variable 

  Tag: parent
    â—¦ does nothing if no parent: [2K[0G    âœ“ does nothing if no parent 
    â—¦ does not accept arguments: [2K[0G    âœ“ does not accept arguments 

  Tag: raw
    â—¦ {% raw %}{{ foo }}{% endraw %}: [2K[0G    âœ“ {% raw %}{{ foo }}{% endraw %} 
    â—¦ {% raw %}{% foo %}{% endraw %}: [2K[0G    âœ“ {% raw %}{% foo %}{% endraw %} 
    â—¦ {% raw %}
{% if true %}
stuff
{% endif %}
{% endraw %}: [2K[0G    âœ“ {% raw %}
{% if true %}
stuff
{% endif %}
{% endraw %} 
    â—¦ {% raw %}{# foo #}{% endraw %}: [2K[0G    âœ“ {% raw %}{# foo #}{% endraw %} 
    â—¦ does not accept arguments: [2K[0G    âœ“ does not accept arguments 

  Tag: set
    â—¦ {% set bar = "bar" %}{% set foo[bar] = "con queso" %}: [2K[0G    âœ“ {% set bar = "bar" %}{% set foo[bar] = "con queso" %} 
    â—¦ {% set bar = "bar" %}{% set foo['bar'] = "con queso" %}: [2K[0G    âœ“ {% set bar = "bar" %}{% set foo['bar'] = "con queso" %} 
    â—¦ {% set bar = "bar" %}{% set foo["bar"] = "con queso" %}: [2K[0G    âœ“ {% set bar = "bar" %}{% set foo["bar"] = "con queso" %} 
    â—¦ {% set bar = "bar" %}{% set foo['bar.baz'] = "con queso" %}: [2K[0G    âœ“ {% set bar = "bar" %}{% set foo['bar.baz'] = "con queso" %} 
    â—¦ {% set bar = "bar" %}{% set foo["bar.baz"] = "con queso" %}: [2K[0G    âœ“ {% set bar = "bar" %}{% set foo["bar.baz"] = "con queso" %} 
    â—¦ {% set bar = "bar" %}{% set foo['bar=baz'] = "con queso" %}: [2K[0G    âœ“ {% set bar = "bar" %}{% set foo['bar=baz'] = "con queso" %} 
    â—¦ {% set bar = "bar" %}{% set foo["bar=baz"] = "con queso" %}: [2K[0G    âœ“ {% set bar = "bar" %}{% set foo["bar=baz"] = "con queso" %} 
    â—¦ {% set bar = "bar" %}{% set baz.bar = "con queso" %}: [2K[0G    âœ“ {% set bar = "bar" %}{% set baz.bar = "con queso" %} 
    â—¦ {% set bar = "bar" %}{% set baz.bar.baz = "con queso" %}: [2K[0G    âœ“ {% set bar = "bar" %}{% set baz.bar.baz = "con queso" %} 
    â—¦ {% set bar = "bar" %}{% set baz["bar"].baz = "con queso" %}: [2K[0G    âœ“ {% set bar = "bar" %}{% set baz["bar"].baz = "con queso" %} 
    â—¦ {% set foo = 1 %}: [2K[0G    âœ“ {% set foo = 1 %} 
    â—¦ {% set foo = "burritos" %}: [2K[0G    âœ“ {% set foo = "burritos" %} 
    â—¦ {% set foo = 1 + 3 %}: [2K[0G    âœ“ {% set foo = 1 + 3 %} 
    â—¦ {% set foo += 4 %}: [2K[0G    âœ“ {% set foo += 4 %} 
    â—¦ {% set foo -= 1 %}: [2K[0G    âœ“ {% set foo -= 1 %} 
    â—¦ {% set foo *= 3 %}: [2K[0G    âœ“ {% set foo *= 3 %} 
    â—¦ {% set foo /= 2 %}: [2K[0G    âœ“ {% set foo /= 2 %} 
    â—¦ {% set foo = bar|default(1) %}: [2K[0G    âœ“ {% set foo = bar|default(1) %} 
    â—¦ {% set foo = foo === 1 %}: [2K[0G    âœ“ {% set foo = foo === 1 %} 
    â—¦ {% set foo = 1 === 1 and not false %}: [2K[0G    âœ“ {% set foo = 1 === 1 and not false %} 
    â—¦ throws on incorrect assignments: [2K[0G    âœ“ throws on incorrect assignments 

  Tag: spaceless
    â—¦ {% spaceless %} <p> foo </p> <p>bar</p> {% endspaceless %}: [2K[0G    âœ“ {% spaceless %} <p> foo </p> <p>bar</p> {% endspaceless %} 
    â—¦ {% spaceless %}{% if true %}<p></p> <p></p>{% endif %}{% endspaceless %}: [2K[0G    âœ“ {% spaceless %}{% if true %}<p></p> <p></p>{% endif %}{% endspaceless %} 
    â—¦ {% spaceless %}{% if false %}{% else %}<p></p> <p></p>{% endif %}{% endspaceless %}: [2K[0G    âœ“ {% spaceless %}{% if false %}{% else %}<p></p> <p></p>{% endif %}{% endspaceless %} 
    â—¦ {% spaceless %}{% macro foo %}<p></p> <p></p>{% endmacro %}{% endspaceless %}{{ foo() }}: [2K[0G    âœ“ {% spaceless %}{% macro foo %}<p></p> <p></p>{% endmacro %}{% endspaceless %}{{ foo() }} 
    â—¦ {% macro foo %}<p></p> <p></p>{% endmacro %}{% spaceless %}{{ foo() }}{% endspaceless %}: [2K[0G    âœ“ {% macro foo %}<p></p> <p></p>{% endmacro %}{% spaceless %}{{ foo() }}{% endspaceless %} 
    â—¦ Throws on tokens: [2K[0G    âœ“ Throws on tokens 

  Tags
    â—¦ throws on unknown tags: [2K[0G    âœ“ throws on unknown tags 
    â—¦ throws on unexpected endtag: [2K[0G    âœ“ throws on unexpected endtag 
    â—¦ can have any set of tokens in end tags: [2K[0G    âœ“ can have any set of tokens in end tags 
    can be set
      â—¦ and used in templates: [2K[0G      âœ“ and used in templates 
      â—¦ and use custom extensions: [2K[0G      âœ“ and use custom extensions 
      â—¦ and throw if are not written correctly: [2K[0G      âœ“ and throw if are not written correctly 

  Templates
    â—¦ /Users/jakub/Developer/Blame/externals/swig/tests/cases/extends_1: [2K[0G    âœ“ /Users/jakub/Developer/Blame/externals/swig/tests/cases/extends_1 
    â—¦ /Users/jakub/Developer/Blame/externals/swig/tests/cases/extends_2: [2K[0G    âœ“ /Users/jakub/Developer/Blame/externals/swig/tests/cases/extends_2 
    â—¦ /Users/jakub/Developer/Blame/externals/swig/tests/cases/extends_set: [2K[0G    âœ“ /Users/jakub/Developer/Blame/externals/swig/tests/cases/extends_set 
    â—¦ /Users/jakub/Developer/Blame/externals/swig/tests/cases/import: [2K[0G    âœ“ /Users/jakub/Developer/Blame/externals/swig/tests/cases/import 
    â—¦ /Users/jakub/Developer/Blame/externals/swig/tests/cases/include: [2K[0G    âœ“ /Users/jakub/Developer/Blame/externals/swig/tests/cases/include 
    â—¦ /Users/jakub/Developer/Blame/externals/swig/tests/cases/include_extends: [2K[0G    âœ“ /Users/jakub/Developer/Blame/externals/swig/tests/cases/include_extends 
    â—¦ /Users/jakub/Developer/Blame/externals/swig/tests/cases/macros: [2K[0G    âœ“ /Users/jakub/Developer/Blame/externals/swig/tests/cases/macros 
    â—¦ /Users/jakub/Developer/Blame/externals/swig/tests/cases/nested_blocks: [2K[0G    âœ“ /Users/jakub/Developer/Blame/externals/swig/tests/cases/nested_blocks 
    â—¦ /Users/jakub/Developer/Blame/externals/swig/tests/cases/parent-parent: [2K[0G    âœ“ /Users/jakub/Developer/Blame/externals/swig/tests/cases/parent-parent 
    â—¦ /Users/jakub/Developer/Blame/externals/swig/tests/cases/parent: [2K[0G    âœ“ /Users/jakub/Developer/Blame/externals/swig/tests/cases/parent 
    â—¦ /Users/jakub/Developer/Blame/externals/swig/tests/cases/set: [2K[0G    âœ“ /Users/jakub/Developer/Blame/externals/swig/tests/cases/set 
    â—¦ /Users/jakub/Developer/Blame/externals/swig/tests/cases/extends_tests/extends_3: [2K[0G    âœ“ /Users/jakub/Developer/Blame/externals/swig/tests/cases/extends_tests/extends_3 
    â—¦ /Users/jakub/Developer/Blame/externals/swig/tests/cases/extends_tests/extends_4: [2K[0G    âœ“ /Users/jakub/Developer/Blame/externals/swig/tests/cases/extends_tests/extends_4 
    â—¦ throw if circular extends are found: [2K[0G    âœ“ throw if circular extends are found 
    â—¦ throw with filename reporting: [2K[0G    âœ“ throw with filename reporting 

  Variables
    can be output
      â—¦ {{ ap }}, {{ bu }}: [2K[0G      âœ“ {{ ap }}, {{ bu }} 
    can be string and number literals
      â—¦ {{ "a" }}: [2K[0G      âœ“ {{ "a" }} 
      â—¦ {{ 1 }}: [2K[0G      âœ“ {{ 1 }} 
      â—¦ {{ 1.5 }}: [2K[0G      âœ“ {{ 1.5 }} 
      â—¦ {{ true }}: [2K[0G      âœ“ {{ true }} 
    return empty string if undefined
      â—¦ "{{ u }}": [2K[0G      âœ“ "{{ u }}" 
    return empty string if null
      â—¦ "{{ n }}": [2K[0G      âœ“ "{{ n }}" 
      â—¦ "{{ o3.n }}": [2K[0G      âœ“ "{{ o3.n }}" 
    can use operators
      â—¦ {{ a + 3 }}: [2K[0G      âœ“ {{ a + 3 }} 
      â—¦ {{ a * 3 }}: [2K[0G      âœ“ {{ a * 3 }} 
      â—¦ {{ a / 3 }}: [2K[0G      âœ“ {{ a / 3 }} 
      â—¦ {{ 3 - a }}: [2K[0G      âœ“ {{ 3 - a }} 
      â—¦ {{ a % 3 }}: [2K[0G      âœ“ {{ a % 3 }} 
    can include objects
      â—¦ {{ {0: 1, a: "b"} }}: [2K[0G      âœ“ {{ {0: 1, a: "b"} }} 
      â—¦ {{ Object.keys({ 0: 1, a: "b" }) }}: [2K[0G      âœ“ {{ Object.keys({ 0: 1, a: "b" }) }} 
      â—¦ {{ o.foo() }}: [2K[0G      âœ“ {{ o.foo() }} 
      â—¦ {{ o2.foo() }}: [2K[0G      âœ“ {{ o2.foo() }} 
      â—¦ {{ o2.foo("foobar") }}: [2K[0G      âœ“ {{ o2.foo("foobar") }} 
      â—¦ {{ o2.bar }}: [2K[0G      âœ“ {{ o2.bar }} 
      â—¦ {{ o2.$bar }}: [2K[0G      âœ“ {{ o2.$bar }} 
    can include arrays
      â—¦ {{ [0, 1, 3] }}: [2K[0G      âœ“ {{ [0, 1, 3] }} 
    are escaped by default
      â—¦ {{ foo }}: [2K[0G      âœ“ {{ foo }} 
    can execute functions
      â—¦ {{ c() }}: [2K[0G      âœ“ {{ c() }} 
      â—¦ {{ c(1) }}: [2K[0G      âœ“ {{ c(1) }} 
      â—¦ {{ d(1)|default("tacos")|replace("tac", "churr") }}: [2K[0G      âœ“ {{ d(1)|default("tacos")|replace("tac", "churr") }} 
      â—¦ {{ d()|default("tacos") }}: [2K[0G      âœ“ {{ d()|default("tacos") }} 
      â—¦ {{ e.f(4, "blah") }}: [2K[0G      âœ“ {{ e.f(4, "blah") }} 
      â—¦ {{ q.r(4, "blah") }}: [2K[0G      âœ“ {{ q.r(4, "blah") }} 
      â—¦ {{ e["f"](4, "blah") }}: [2K[0G      âœ“ {{ e["f"](4, "blah") }} 
      â—¦ {{ chalupa().bar() }}: [2K[0G      âœ“ {{ chalupa().bar() }} 
      â—¦ {{ { foo: "bar" }.foo }}: [2K[0G      âœ“ {{ { foo: "bar" }.foo }} 
    can run multiple filters
      â—¦ {{ a|default("")|default(1) }}: [2K[0G      âœ“ {{ a|default("")|default(1) }} 
    can have filters with operators
      â—¦ {{ a|default("1") + b|default("2") }}: [2K[0G      âœ“ {{ a|default("1") + b|default("2") }} 
    can use both notation types
      â—¦ {{ food.a }}: [2K[0G      âœ“ {{ food.a }} 
      â—¦ {{ food["a"] }}: [2K[0G      âœ“ {{ food["a"] }} 
      â—¦ {{ g[0][h.g.i]["c"].b[i] }}: [2K[0G      âœ“ {{ g[0][h.g.i]["c"].b[i] }} 
    can do some logical operations
      â—¦ {{ ap === "apples" }}: [2K[0G      âœ“ {{ ap === "apples" }} 
      â—¦ {{ not a }}: [2K[0G      âœ“ {{ not a }} 
      â—¦ {{ a <= 4 }}: [2K[0G      âœ“ {{ a <= 4 }} 
    null objects
      â—¦ {{ n }}: [2K[0G      âœ“ {{ n }} 
    can throw errors when parsing
      â—¦ with left open state: [2K[0G      âœ“ with left open state 
      â—¦ with unknown filters: [2K[0G      âœ“ with unknown filters 
      â—¦ with weird closing characters: [2K[0G      âœ“ with weird closing characters 
      â—¦ with colons outside of objects: [2K[0G      âœ“ with colons outside of objects 
      â—¦ with random dots: [2K[0G      âœ“ with random dots 
      â—¦ with bad commas: [2K[0G      âœ“ with bad commas 
      â—¦ reserved JS words: [2K[0G      âœ“ reserved JS words (65ms)
      â—¦ invalid logic: [2K[0G      âœ“ invalid logic 

  Whitespace
    strips before
      â—¦ "burritos\n \n{{- tacos }}\n": [2K[0G      âœ“ "burritos\n \n{{- tacos }}\n" 
      â—¦ "burritos\n \n{%- if tacos %}\ntacos\r\n{%- endif %}\n": [2K[0G      âœ“ "burritos\n \n{%- if tacos %}\ntacos\r\n{%- endif %}\n" 
    strips after
      â—¦ "burritos\n \n{{ tacos -}}\n": [2K[0G      âœ“ "burritos\n \n{{ tacos -}}\n" 
      â—¦ "burritos\n \n{% if tacos -%}\ntacos\r\n{% endif -%}\n": [2K[0G      âœ“ "burritos\n \n{% if tacos -%}\ntacos\r\n{% endif -%}\n" 
    strips both
      â—¦ "burritos\n \n{{- tacos -}}\n": [2K[0G      âœ“ "burritos\n \n{{- tacos -}}\n" 
      â—¦ "burritos\n \n{%- if tacos -%}\ntacos\r\n{%- endif -%}\n": [2K[0G      âœ“ "burritos\n \n{%- if tacos -%}\ntacos\r\n{%- endif -%}\n" 


  379 passing (2 seconds)

